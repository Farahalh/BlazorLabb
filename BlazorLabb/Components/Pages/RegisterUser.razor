@page "/registerUser"
@rendermode InteractiveServer

@* Summary:
   Renders a registration form component for capturing and displaying user information, including personal details,
   address, and company information. Utilizes Blazor's `<EditForm>` for validation and input binding to the `person` model.
   Once the form is submitted and validated, the user's data is displayed in a read-only list format.
   This page enables interactive data entry, real-time validation, and a dynamic transition from edit mode to display mode.
*@

<PageTitle>Register User</PageTitle>

<div class="card p-4">
    <h1>Register User</h1>

    @if (isFormVisible)
    {
        <div class="d-flex flex-column mb-3 pt-4">
            <EditForm Model=@person OnValidSubmit="OnFormSubmitted">
                <DataAnnotationsValidator />
                <div class="row g-3">
                    <div class="col-md-6">
                        <label for="inputUserName" class="form-label">Name</label>
                        <InputText @bind-Value=person.Name class="form-control" id="Name" />
                        <ValidationMessage For=@(() => person.Name) />
                    </div>
                    <div class="col-md-6">
                        <label for="inputUserName" class="form-label">User Name</label>
                        <InputText @bind-Value=person.UserName class="form-control" id="UserName" />
                        <ValidationMessage For=@(() => person.UserName) />
                    </div>
                    <div class="col-md-6">
                        <label for="inputUserEmail" class="form-label">Email</label>
                        <InputText @bind-Value=person.Email class="form-control" id="Email" />
                        <ValidationMessage For=@(() => person.Email) />
                    </div>
                    <div class="col-md-6">
                        <label for="inputUserPassword" class="form-label">Password</label>
                        <InputText @bind-Value=person.Password class="form-control" id="Password" type="password" />
                        <ValidationMessage For=@(() => person.Password) />
                    </div>

                    <div class="col-12">
                        <h4>Address Information</h4>
                    </div>
                    <div class="col-md-6">
                        <label for="inputStreetName" class="form-label">Street Name</label>
                        <InputText @bind-Value=person.Adress.Street class="form-control" id="StreetName" />
                        <ValidationMessage For=@(() => person.Adress.Street) />
                    </div>
                    <div class="col-md-6">
                        <label for="inputCity" class="form-label">City</label>
                        <InputText @bind-Value=person.Adress.City class="form-control" id="City" />
                        <ValidationMessage For=@(() => person.Adress.City) />
                    </div>
                    <div class="col-md-6">
                        <label for="inputZipcode" class="form-label">Zipcode</label>
                        <InputText @bind-Value=person.Adress.Zipcode class="form-control" id="Zipcode" />
                        <ValidationMessage For=@(() => person.Adress.Zipcode) />
                    </div>

                    <div class="col-12">
                        <h4>Company Information</h4>
                    </div>
                    <div class="col-md-6">
                        <label for="inputCompanyName" class="form-label">Company Name</label>
                        <InputText @bind-Value=person.Company.Name class="form-control" id="CompanyName" />
                        <ValidationMessage For=@(() => person.Company.Name) />
                    </div>
                    <div class="col-md-6">
                        <label for="inputCatchphrase" class="form-label">Catchphrase</label>
                        <InputText @bind-Value=person.Company.Catchphrase class="form-control" id="Catchphrase" />
                        <ValidationMessage For=@(() => person.Company.Catchphrase) />
                    </div>

                    <div class="col-12">
                        <button type="submit" class="btn btn-primary" value="Save">Register</button>
                    </div>
                </div>
            </EditForm>
        </div>
    }
    else if (!string.IsNullOrEmpty(person.Name))
    {
        <ul>
            <li><strong>Name:</strong> @person.Name</li>
            <li><strong>User Name:</strong> @person.UserName</li>
            <li><strong>Email:</strong> @person.Email</li>
            <li><strong>Password:</strong> ****</li>
            <li><strong>Street Name:</strong> @person.Adress.Street</li>
            <li><strong>City:</strong> @person.Adress.City</li>
            <li><strong>Zipcode:</strong> @person.Adress.Zipcode</li>
            <li><strong>Company Name:</strong> @person.Company.Name</li>
            <li><strong>Catchphrase:</strong> @person.Company.Catchphrase</li>
        </ul>
    }
</div>
